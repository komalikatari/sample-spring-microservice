name: Build and Deploy Java Microservice

on:
  push:
    branches:
      - master
      - develop
      - release 

jobs:
  build:
    runs-on: kubernetes

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'
    

      - name: Build with Maven
        run: echo ${{github.workspace}}; cd ${{github.workspace}}/${{vars.SERVICE_NAME}} ; sudo apt install -y maven ; mvn clean install
        
      - name: Docker permission 
        run: sudo chmod 777 /var/run/docker.sock
      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        run:  cd ${{github.workspace}}/${{vars.SERVICE_NAME}}; docker build -t ${{vars.SERVICE_NAME}} .

      - name: Log in to Docker registry
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}


      - name: Tagging the image
        run: docker tag ${{vars.SERVICE_NAME}} ${{ secrets.DOCKER_USERNAME }}/${{vars.SERVICE_NAME}}:latest

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/${{vars.SERVICE_NAME}}:latest
  
  deploying:
   needs: build
   runs-on: deploy
   steps:

   - name: Installing docker
     run: |
         sudo apt-get update
         sudo apt-get install -y docker.io
         sudo systemctl start docker
         sudo systemctl enable docker
     #uses: docker/setup-buildx-action@v1
     # with:
     #    dockerfile: Dockerfile
     #    container-name: kind
       

   # - name: Docker permission 
   #   run: sudo chmod 777 /var/run/docker.sock    


   - name: Install kubernetes with kind
     run: |
       [ $(uname -m) = x86_64 ] && curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
       chmod +x ./kind
       sudo mv ./kind /usr/local/bin/kind
       echo "kind version"
     shell: bash

   - name: kubernetes cluster with master and worker nodes
     run: |
        kind create cluster --name k8s-playground --config <(echo 'kind: Cluster\napiVersion: kind.x-k8s.io/v1alpha4\nnodes:\n- role: control-plane\n- role: worker\n- role: worker')
        
  
   # - name: Create Kubernetes cluster with kind
   #   run: kind create cluster --name k8s-playground --config kind-config.yaml --wait 5m
   #   shell: bash


   - name: Install kubectl 
     run: |
      curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      snap install kubectl --classic
      echo "kubectl version --client"
     shell: bash
    
   - name: deploying to k8s
     run:  sudo kubectl apply -f /opt/java.yaml
   
